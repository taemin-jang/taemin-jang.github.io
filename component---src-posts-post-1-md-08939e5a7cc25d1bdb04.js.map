{"version":3,"file":"component---src-posts-post-1-md-08939e5a7cc25d1bdb04.js","mappings":"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","sources":["webpack://taemin-jang.github.io/./src/posts/post1.md","webpack://taemin-jang.github.io/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    img: \"img\",\n    ol: \"ol\",\n    li: \"li\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"AJAX란?\"), \"\\n\", React.createElement(_components.p, null, \"AJAX (Asynchronous JavaScript And Xml)는 자바스크립트를 사용하여 브라우저가 서버에게 비동기 방식으로 데이터를 요청하고, 서버가 응답한 데이터를 수신하여 웹 페이지를 동적으로 갱신하는 프로그래밍 방식을 말한다.\"), \"\\n\", React.createElement(_components.h2, null, \"AJAX 이전 전통적인 웹페이지 방식\"), \"\\n\", React.createElement(_components.img, {\n    src: \"../images/web_before_ajax.png\",\n    alt: \"AJAX 이전 전통적인 웹페이지 방식\"\n  }), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"클라이언트로부터 요청이 들어왔을 때 이전 웹 페이지와 차이가 없어 변경할 필요가 없는 부분도 포함해서 새로운 HTML을 서버로부터 다시 전송받는다.\"), \"\\n\", React.createElement(_components.li, null, \"전송 받은 데이터를 처음부터 다시 렌더링한다. 이 때 화면 깜박임이 발생한다.\"), \"\\n\", React.createElement(_components.li, null, \"클라이언트와 서버와 통신이 동기 방식으로 동작하여 서버로부터 응답이 될 때까지 블로킹된다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"AJAX 적용 후 웹페이지 방식\"), \"\\n\", React.createElement(_components.img, {\n    src: \"../images/web_before_ajax.png\",\n    alt: \"AJAX 적용 후 웹페이지 방식\"\n  }), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"변경할 부분을 갱신하는 데 필요한 데이터만 받기 때문에 불필요한 데이터 통신이 발생하지 않는다.\"), \"\\n\", React.createElement(_components.li, null, \"변경할 필요가 없는 부분은 다시 렌더링하지 않는다. 화면 깜박임 현상이 발생하지 않는다.\"), \"\\n\", React.createElement(_components.li, null, \"클라이언트와 서버의 통신이 비동기 방식으로 동작하므로 블로킹이 발생하지 않는다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"XMLHTTPRequest (XHR)\"), \"\\n\", React.createElement(_components.p, null, \"AJAX는 XMLHTTPRequest를 기반으로 동작하며, HTTP 비동기 통신을 위한 메서드와 프로퍼티를 제공한다.\"), \"\\n\", React.createElement(_components.p, null, \"ES6 이전 방식\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"// 객체 생성\\r\\nvar ourRequest = new XMLHttpRequest();\\r\\n\\r\\n// HTTP 요청 정보 초기화\\r\\nourRequest.open(\\r\\n  \\\"GET\\\",\\r\\n  \\\"https://taemin-jang.github.io/json-example/animals-1.json\\\"\\r\\n);\\r\\n\\r\\n// HTTP 요청이 성공적일 경우\\r\\nourRequest.onload = () => {\\r\\n  var ourData = JSON.parse(ourRequest.responseText);\\r\\n  console.log(ourData[0]);\\r\\n};\\r\\nourRequest.send();\\n\")), \"\\n\", React.createElement(_components.h3, null, \"Fetch API\"), \"\\n\", React.createElement(_components.p, null, \"XMLHTTPRequest 보다 훨씬 코드가 직관적이다. Promise를 리턴한다.\"), \"\\n\", React.createElement(_components.p, null, \"ES6 이후 방식\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"fetch(\\\"https://taemin-jang.github.io/json-example/animals-1.json\\\")\\r\\n\\t.then(res => res.json())\\r\\n\\t.then(resJson => console.log(resJson));\\r\\n\\t.catch((error) => {\\r\\n        console.log(error);\\r\\n   });\\n\")), \"\\n\", React.createElement(_components.h2, null, \"정리\"), \"\\n\", React.createElement(_components.h3, null, \"장점\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"페이지를 전환하지 않고 빠르게 화면 일부분 업데이트 할 수 있다.\"), \"\\n\", React.createElement(_components.li, null, \"수신하는 데이터 양을 줄일 수 있고 클라이언트에게 처리를 맡길 수 있다.\"), \"\\n\", React.createElement(_components.li, null, \"서버 처리를 기다리지 않고 비동기 요청이 가능하다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"단점\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"지원하지 않는 브라우저가 있다.\"), \"\\n\", React.createElement(_components.li, null, \"무분별하게 사용하면 역으로 서버의 부하가 늘어날 수 있다.\"), \"\\n\", React.createElement(_components.li, null, \"동일 출처 정책 문제가 발생할 수 있다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"CORS, CSRF 그게 대체 모야?\"), \"\\n\", React.createElement(_components.p, null, \"CORS를 알기 전에 SOP 먼저 알고 가야한다.\"), \"\\n\", React.createElement(_components.h2, null, \"SOP (Same-Origin Policy)\"), \"\\n\", React.createElement(_components.p, null, \"직역하면 동일 출처 정책이라고 한다. 말 그대로 같은 출처끼리 정보(리소스)를 공유할 수 있다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"출처란 ?\"), \"\\n\", React.createElement(_components.img, {\n    src: \"../images/origin.png\",\n    alt: \"출처\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Protocol + Host + Port를 출처라고 한다.\"), \"\\n\", React.createElement(_components.p, null, \"이 중에서 하나라도 다르면 서로 다른 출처라고 브라우저에서 판단한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"| URL ( http://domain.com ) | Result                     |\\r\\n| ------------------------- | -------------------------- |\\r\\n| http://domain.com:8080    | x (port가 다르기 때문)     |\\r\\n| http://api.domain.com     | x (host가 다르기 때문)     |\\r\\n| https://domain.com        | x (protocol이 다르기 때문) |\"), \"\\n\", React.createElement(_components.p, null, \"이러한 정책은 \", React.createElement(_components.code, null, \"보안 이슈\"), \"로 인해 나오게 됐다.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"../images/sop_issue.png\",\n    alt: \"sop_issue\"\n  }), \"\\n\", React.createElement(_components.p, null, \"만약 어떤 사이트를 방문했는데 해당 사이트가 누군가 악의적으로 만든 사이트라고 가정하자.\"), \"\\n\", React.createElement(_components.p, null, \"해당 사이트에서 다른 금융 사이트를 로그인하도록 유도를 해서 로그인을 하면 악성 사이트에서 JS로 쉽게 접근하여 악의적으로 사용할 수 있다.\"), \"\\n\", React.createElement(_components.p, null, \"이렇게 사용자의 인증된 세션을 악용해서 공격하는 방식을 CSRF (Cross Site Request Forgery, 사이트 간 위조 요청)라고 한다.\"), \"\\n\", React.createElement(_components.p, null, \"CSRF를 방지하기 위해서 SOP 정책이 나오게 된 것이다. SOP를 적용하게 되면 악성 사이트의 Origin(출처)는 다른 출처이기 때문에 허용이 안된다.\"), \"\\n\", React.createElement(_components.p, null, \"만약 다른 출처의 리소스를 접근하기 위해서 CORS 정책이 필요하다.\"), \"\\n\", React.createElement(_components.h2, null, \"CORS (Cross-Origin Resource Sharing)\"), \"\\n\", React.createElement(_components.p, null, \"교차 출처 리소스 공유라고 직역이 되고, 교차 출처는 다른 출처를 의미한다.\"), \"\\n\", React.createElement(_components.p, null, \"HTTP header를 추가하여 서로 다른 출처의 리소스를 접근할 수 있는 권한을 부여하도록 브라우저에게 알리는 정책이다.\"), \"\\n\", React.createElement(_components.p, null, \"보안 상의 이유로 SOP에 의해 다른 출처의 HTTP 요청을 제한하지만, CORS 정책에 맞게 올바른 HTTP header를 포함한 응답을 반환하면 브라우저는 해당 출처에 대한 접근을 허용했다고 판단한다.\"), \"\\n\", React.createElement(_components.h2, null, \"CORS 동작 방식\"), \"\\n\", React.createElement(_components.p, null, \"CORS 동작 방식에는 3가지 시나리오가 있다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Simple Request\"), \"\\n\", React.createElement(_components.li, null, \"Preflight Request\"), \"\\n\", React.createElement(_components.li, null, \"Request with Credentials\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"Simple Request\"), \"\\n\", React.createElement(_components.p, null, \"다음 모든 조건을 충족한다면 Preflight Request를 하지 않고 바로 요청을 보내는 것이다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"HTTP Method : GET, HEAD, POST\"), \"\\n\", React.createElement(_components.li, null, \"Header : Accept, Accept-Language, Content-Language, Content-Type\"), \"\\n\", React.createElement(_components.li, null, \"Content-Type : application/x-www-form-urlencoded, multipart/form-data, text/plain\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"CORS를 허용하려면 서버 측에서 Access-Control-Allow-Origin = ‘*’ 으로 해주면 모든 도메인을 허용해준다. ⇒ CORS 정책 위반 여부\"), \"\\n\", React.createElement(_components.h3, null, \"Preflight Request\"), \"\\n\", React.createElement(_components.p, null, \"Simple Request와는 다르게 먼저 Option 메서드를 통해 다른 출처의 리소스로 HTTP 요청을 보낸 후 실제로 HTTP 요청을 전송하기 안전한지 확인한다. (사전 작업)\"), \"\\n\", React.createElement(_components.img, {\n    src: \"../images/preflight_request.png\",\n    alt: \"Preflight Request\"\n  }), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Preflight Request : 헤더에 실제 요청 시 어떤 헤더와 HTTP Method를 사용할 지 전달\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Access-Control-Request-Method : 실제 요청 시 전송 할 HTTP Method\"), \"\\n\", React.createElement(_components.li, null, \"Access-Control-Request-Headers : 실제 요청 시 전송 할 정의된 헤더\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"Preflight Response : 사용 가능한 HTTP Method와 Header 목록을 전달\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Access-Control-Allow-Origin : 리소스를 가져올 수 있는 출처, ( *로 할 경우 모든 출처를 허용)\"), \"\\n\", React.createElement(_components.li, null, \"Access-Control-Allow-Methods : 리소스에 접근 시 허용되는 HTTP Method 목록\"), \"\\n\", React.createElement(_components.li, null, \"Access-Control-Allow-Headers : 리소스에 접근 시 허용되는 정의된 헤더 목록\"), \"\\n\", React.createElement(_components.li, null, \"Access-Control-Allow-Max-Age : Preflight Request에 대한 결과를 캐싱할 수 있는 시간\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"해당 시간 이내에 동일한 요청을 재시도 할 경우 Preflight Request를 생략하고 캐싱된 결과를 반환\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"이러한 Preflight Request 진행 후 CORS 정책에 위반되지 않으면 실제 요청을 통해 리소스에 접근하게 된다.\"), \"\\n\", React.createElement(_components.h3, null, \"왜 Preflight Request를 하는걸까?\"), \"\\n\", React.createElement(_components.p, null, \"서버는 CORS를 모른다!\"), \"\\n\", React.createElement(_components.img, {\n    src: \"../images/no_preflight.png\",\n    alt: \"No Preflight\"\n  }), \"\\n\", React.createElement(_components.p, null, \"만약 Preflight를 안하게 됐을 때 Delete나 Put 같은 HTTP Method로 요청을 한다고 해보자.\"), \"\\n\", React.createElement(_components.p, null, \"그러면 서버는 해당 요청대로 서버 로직을 처리한다. 이 때 데이터가 삭제될 수도 있고, 변경될 수도 있다. 그러고 서버에 CORS 설정을 안해줬으므로 허용된 출처는 없고 브라우저는 CORS 에러를 발생시킨다.\"), \"\\n\", React.createElement(_components.p, null, \"하지만 이미 서버에서는 요청에 맞게 데이터를 처리한 이후다.\"), \"\\n\", React.createElement(_components.p, null, \"그렇기 때문에 Preflight가 필요하게 된다.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"../images/preflight.png\",\n    alt: \"Preflight\"\n  }), \"\\n\", React.createElement(_components.p, null, \"위 그림과 같이 Preflight를 통해서 요청된 origin(출처)가 올바른지 확인 후 올바르지 않다면(=CORS) 서버에서는 어떠한 처리도 하지 않기 때문에 실제 요청을 보내지 않는다.\"), \"\\n\", React.createElement(_components.h3, null, \"Request with Credentials\"), \"\\n\", React.createElement(_components.p, null, \"인증(쿠키) 관련 헤더를 포함할 때 사용하는 요청이다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"클라이언트측 요청 헤더에 credentials 옵션을 별도로 설정해줘야 한다.\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"same-origin : 동일 출처 내에서만 인증 정보를 담는다. (기본값)\"), \"\\n\", React.createElement(_components.li, null, \"include : 모든 요청에 대해서 인증 정보를 담는다.\"), \"\\n\", React.createElement(_components.li, null, \"omit : 모든 요청에 대해서 인증 정보를 담을 수 없도록 설정한다.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"서버측 응답 헤더에 Access-Control-Allow-Credentials 값이 반드시 true로 설정되어야 한다.\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"클라이언트측 요청 헤더에 credentials 옵션을 설정해줘도 서버측 응답 헤더에 설정해주지 않으면 인증 정보를 담지 못한다.\"), \"\\n\", React.createElement(_components.li, null, \"또한 인증 정보를 허용한다면, Access-Control-Allow-Origin 헤더에 와일드카드 (*)는 넣을 수 없고, 반드시 출처를 지정해줘야한다.\"), \"\\n\"), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","h2","img","ol","li","h3","pre","code","ul","blockquote","_provideComponents","components","React","src","alt","className","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}