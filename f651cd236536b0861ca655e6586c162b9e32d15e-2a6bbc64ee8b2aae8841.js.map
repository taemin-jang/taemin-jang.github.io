{"version":3,"file":"f651cd236536b0861ca655e6586c162b9e32d15e-2a6bbc64ee8b2aae8841.js","mappings":"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","sources":["webpack://taemin-jang.github.io/./node_modules/camelcase/index.js","webpack://taemin-jang.github.io/../src/image-utils.ts","webpack://taemin-jang.github.io/../src/components/hooks.ts","webpack://taemin-jang.github.io/../src/components/layout-wrapper.tsx","webpack://taemin-jang.github.io/../src/components/picture.tsx","webpack://taemin-jang.github.io/../src/components/placeholder.tsx","webpack://taemin-jang.github.io/../src/components/main-image.tsx","webpack://taemin-jang.github.io/../src/components/gatsby-image.server.tsx","webpack://taemin-jang.github.io/../src/components/gatsby-image.browser.tsx","webpack://taemin-jang.github.io/../src/components/static-image.server.tsx","webpack://taemin-jang.github.io/../src/components/static-image.tsx","webpack://taemin-jang.github.io/./src/components/header.js","webpack://taemin-jang.github.io/./src/components/hero.js","webpack://taemin-jang.github.io/./src/components/tech.js","webpack://taemin-jang.github.io/./src/components/projects/project1.js","webpack://taemin-jang.github.io/./src/components/projects/project2.js","webpack://taemin-jang.github.io/./src/components/projects/project3.js","webpack://taemin-jang.github.io/./src/components/projects/project4.js","webpack://taemin-jang.github.io/./src/components/layout.js"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import * as React from \"react\";\r\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\r\nconst Header = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `);\r\n  return (\r\n    <header>\r\n      <nav className=\"bg-white border-gray-200 px-4 lg:px-6 py-2.5 dark:bg-gray-800\">\r\n        <div className=\"flex flex-wrap justify-between items-center mx-auto max-w-screen-xl\">\r\n          <Link to=\"/\" className=\"flex items-center p-4\">\r\n            <span className=\"self-center text-xl font-semibold whitespace-nowrap dark:text-white\">\r\n              {data.site.siteMetadata.title}\r\n            </span>\r\n          </Link>\r\n          <div\r\n            className=\"hidden justify-between items-center w-full lg:flex lg:w-auto lg:order-1\"\r\n            id=\"mobile-menu-2\"\r\n          >\r\n            <ul className=\"flex flex-col mt-4 font-medium lg:flex-row lg:space-x-8 lg:mt-0\">\r\n              <li>\r\n                <Link\r\n                  href=\"#home\"\r\n                  className=\"block py-2 pr-4 pl-3 text-white rounded bg-primary-green lg:bg-transparent lg:text-primary-green lg:p-0 dark:text-white\"\r\n                  aria-current=\"page\"\r\n                >\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  href=\"#skills\"\r\n                  className=\"block py-2 pr-4 pl-3 text-gray-700 border-b border-gray-100 hover:bg-gray-50 lg:hover:bg-transparent lg:border-0 lg:hover:text-primary-green_hover lg:p-0 dark:text-gray-400 lg:dark:hover:text-white dark:hover:bg-gray-700 dark:hover:text-white lg:dark:hover:bg-transparent dark:border-gray-700\"\r\n                >\r\n                  Skills\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  href=\"#project\"\r\n                  className=\"block py-2 pr-4 pl-3 text-gray-700 border-b border-gray-100 hover:bg-gray-50 lg:hover:bg-transparent lg:border-0 lg:hover:text-primary-green_hover lg:p-0 dark:text-gray-400 lg:dark:hover:text-white dark:hover:bg-gray-700 dark:hover:text-white lg:dark:hover:bg-transparent dark:border-gray-700\"\r\n                >\r\n                  Project\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"flex items-center lg:order-2\">\r\n            <button\r\n              data-collapse-toggle=\"mobile-menu-2\"\r\n              type=\"button\"\r\n              className=\"inline-flex items-center p-2 ml-1 text-sm text-gray-500 rounded-lg lg:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600\"\r\n              aria-controls=\"mobile-menu-2\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <span className=\"sr-only\">Open main menu</span>\r\n              <svg\r\n                className=\"w-6 h-6\"\r\n                fill=\"currentColor\"\r\n                viewBox=\"0 0 20 20\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  fill-rule=\"evenodd\"\r\n                  d=\"M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\"\r\n                  clip-rule=\"evenodd\"\r\n                ></path>\r\n              </svg>\r\n              <svg\r\n                className=\"hidden w-6 h-6\"\r\n                fill=\"currentColor\"\r\n                viewBox=\"0 0 20 20\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  fill-rule=\"evenodd\"\r\n                  d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n                  clip-rule=\"evenodd\"\r\n                ></path>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import * as React from \"react\";\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\nimport { Link } from \"gatsby\";\r\nconst Hero = () => {\r\n  return (\r\n    <div id=\"home\">\r\n      <div className=\"relative isolate px-6 lg:px-8\">\r\n        <div className=\"mx-auto max-w-7xl py-32 sm:pb-48 lg:pb-56 flex justify-between\">\r\n          <div className=\"text-left gap-8 max-w-3xl sm:pt-20 lg:pt-20\">\r\n            <h1 className=\"text-4xl font-bold tracking-tight text-gray-900 sm:text-6xl\">\r\n              안녕하세요!\r\n            </h1>\r\n            <h1 className=\"text-4xl font-bold tracking-tight text-gray-900 sm:text-6xl\">\r\n              프론트엔드 개발자\r\n            </h1>\r\n            <h1 className=\"text-4xl font-bold tracking-tight text-gray-900 sm:text-6xl\">\r\n              <span className=\"text-primary-green\">장태민</span>입니다.\r\n            </h1>\r\n            <div className=\"bg-primary-green_bg rounded-xl p-3 mt-4\">\r\n              <p className=\"text-lg leading-8 text-gray-900 font-bold\">\r\n                이메일 | ttaemni@gmail.com\r\n              </p>\r\n              <p className=\"text-lg leading-8 text-gray-900 font-bold\">\r\n                연락처 | 010-5681-3051\r\n              </p>\r\n              <StaticImage\r\n                src=\"../images/GitHub-Mark.png\"\r\n                width={40}\r\n                height={40}\r\n                className=\"rounded-3xl mt-1\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <StaticImage\r\n              src=\"../images/JangTaemin2.png\"\r\n              width={600}\r\n              height={600}\r\n              className=\"drop-shadow-customRD\"\r\n            ></StaticImage>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"absolute inset-x-0 top-[calc(100%-13rem)] -z-10 transform-gpu overflow-hidden blur-3xl sm:top-[calc(100%-40rem)]\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"relative left-[calc(50%+3rem)] aspect-[1155/678] w-[36.125rem] -translate-x-1/2 bg-gradient-to-tr from-[#A4BC9C] to-[#8CA68B] opacity-30 sm:left-[calc(50%+36rem)] sm:w-[72.1875rem]\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import * as React from \"react\";\r\n\r\nconst Tech = () => {\r\n  return (\r\n    <div id=\"skills\">\r\n      <div className=\"bg-primary-green_bg py-24 sm:py-36\">\r\n        <div className=\"mx-auto max-w-7xl px-6 lg:px-8\">\r\n          <div className=\"mx-auto max-w-2xl lg:text-center\">\r\n            <h2 className=\"text-base font-semibold leading-7 text-indigo-600\">\r\n              Skills\r\n            </h2>\r\n            <p className=\"my-2 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl\">\r\n              기술 스택\r\n            </p>\r\n            <div className=\"flex justify-around my-10\">\r\n              <span class=\"inline-flex mr-10 items-center rounded-3xl bg-white px-5 py-2 text-base font-bold text-black ring-1 ring-inset ring-white/10\">\r\n                JavaScript\r\n              </span>\r\n              <span class=\"inline-flex mr-10 items-center rounded-3xl bg-white px-5 py-2 text-base font-bold text-black ring-1 ring-inset ring-white/10\">\r\n                TypeScript\r\n              </span>\r\n              <span class=\"inline-flex mr-10 items-center rounded-3xl bg-white px-5 py-2 text-base font-bold text-black ring-1 ring-inset ring-white/20\">\r\n                Vue\r\n              </span>\r\n              <span class=\"inline-flex mr-10 items-center rounded-3xl bg-white px-5 py-2 text-base font-bold text-black ring-1 ring-inset ring-white/20\">\r\n                Vuex\r\n              </span>\r\n              <span class=\"inline-flex mr-10 items-center rounded-3xl bg-white px-5 py-2 text-base font-bold text-black ring-1 ring-inset ring-white/10\">\r\n                Pinia\r\n              </span>\r\n              <span class=\"inline-flex mr-10 items-center rounded-3xl bg-white px-5 py-2 text-base font-bold text-black ring-1 ring-inset ring-white/10\">\r\n                Vuetify\r\n              </span>\r\n              <span class=\"inline-flex mr-10 items-center rounded-3xl bg-white px-5 py-2 text-base font-bold text-black ring-1 ring-inset ring-white/10\">\r\n                Express\r\n              </span>\r\n              <span class=\"inline-flex mr-10 items-center rounded-3xl bg-white px-5 py-2 text-base font-bold text-black ring-1 ring-inset ring-white/10\">\r\n                Sequelize\r\n              </span>\r\n              <span class=\"inline-flex mr-10 items-center rounded-3xl bg-white px-5 py-2 text-base font-bold text-black ring-1 ring-inset ring-white/10\">\r\n                MySQL\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"mx-auto mt-16 max-w-2xl sm:mt-20 lg:mt-24 lg:max-w-7xl\">\r\n            <dl className=\"grid max-w-xl grid-cols-1 gap-x-8 gap-y-10 lg:max-w-none lg:grid-cols-3 lg:gap-y-16\">\r\n              <div className=\"relative pl-16\">\r\n                <dt className=\"text-base font-semibold leading-7 text-gray-900\">\r\n                  <div className=\"absolute left-0 top-0 flex h-11 w-11 items-center justify-center rounded-lg\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      viewBox=\"0 0 48 48\"\r\n                      width=\"48px\"\r\n                      height=\"48px\"\r\n                    >\r\n                      <polygon\r\n                        fill=\"#81c784\"\r\n                        points=\"23.987,17 18.734,8 2.974,8 23.987,44 45,8 29.24,8\"\r\n                      />\r\n                      <polygon\r\n                        fill=\"#455a64\"\r\n                        points=\"29.24,8 23.987,17 18.734,8 11.146,8 23.987,30 36.828,8\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                  Vue\r\n                </dt>\r\n                <dd className=\"mt-2 text-base leading-7 text-gray-600\">\r\n                  <p>\r\n                    Vue2 Option API, Vue3 Composition API의 사용 경험이\r\n                    있습니다.\r\n                  </p>\r\n                  <p>Vuex, Pinia의 상태관리 라이브러리 사용 경험이 있습니다.</p>\r\n                  <p>Vuetify3 UI 라이브러리 사용 경험이 있습니다.</p>\r\n                  <p>\r\n                    Axios를 사용하여 Open API 호출 및 데이터 바인딩 경험이\r\n                    있습니다.\r\n                  </p>\r\n                </dd>\r\n              </div>\r\n              <div className=\"relative pl-16\">\r\n                <dt className=\"text-base font-semibold leading-7 text-gray-900\">\r\n                  <div className=\"absolute left-0 top-0 flex h-10 w-10 items-center justify-center rounded-lg bg-badge-js\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      viewBox=\"0 0 48 48\"\r\n                      width=\"144px\"\r\n                      height=\"144px\"\r\n                      baseProfile=\"basic\"\r\n                    >\r\n                      <path fill=\"#f7df1e\" d=\"M6,42V6h36v36H6z\" />\r\n                      <path\r\n                        fill=\"#000001\"\r\n                        d=\"M29.538,32.947c0.692,1.124,1.444,2.201,3.037,2.201c1.338,0,2.04-0.665,2.04-1.585 c0-1.101-0.726-1.492-2.198-2.133l-0.807-0.344c-2.329-0.988-3.878-2.226-3.878-4.841c0-2.41,1.845-4.244,4.728-4.244 c2.053,0,3.528,0.711,4.592,2.573l-2.514,1.607c-0.553-0.988-1.151-1.377-2.078-1.377c-0.946,0-1.545,0.597-1.545,1.377 c0,0.964,0.6,1.354,1.985,1.951l0.807,0.344C36.452,29.645,38,30.839,38,33.523C38,36.415,35.716,38,32.65,38 c-2.999,0-4.702-1.505-5.65-3.368L29.538,32.947z M17.952,33.029c0.506,0.906,1.275,1.603,2.381,1.603 c1.058,0,1.667-0.418,1.667-2.043V22h3.333v11.101c0,3.367-1.953,4.899-4.805,4.899c-2.577,0-4.437-1.746-5.195-3.368 L17.952,33.029z\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                  JavaScript\r\n                </dt>\r\n                <dd className=\"mt-2 text-base leading-7 text-gray-600\">\r\n                  <p>ES6+ 문법을 사용할 수 있습니다.</p>\r\n                  <p>JavaScript 동작 방식을 이해하고 있습니다.</p>\r\n                  <p>TypeScript를 사용할 수 있습니다.</p>\r\n                  <p>TypeScript 개발 환경 구축 경험이 있습니다.</p>\r\n                </dd>\r\n              </div>\r\n              <div className=\"relative pl-16\">\r\n                <dt className=\"text-base font-semibold leading-7 text-gray-900\">\r\n                  <div className=\"absolute left-0 top-0 flex h-10 w-10 items-center justify-center rounded-lg\">\r\n                    <svg\r\n                      version=\"1.1\"\r\n                      baseProfile=\"basic\"\r\n                      id=\"Layer_1\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      x=\"0px\"\r\n                      y=\"0px\"\r\n                      viewBox=\"0 0 50 50\"\r\n                    >\r\n                      <path\r\n                        d=\"M49.729,11h-0.85c-1.051,0-2.041,0.49-2.68,1.324l-8.7,11.377l-8.7-11.377C28.162,11.49,27.171,11,26.121,11h-0.85\r\n\tl10.971,14.346L25.036,40h0.85c1.051,0,2.041-0.49,2.679-1.324L37.5,26.992l8.935,11.684C47.073,39.51,48.063,40,49.114,40h0.85\r\n\tL38.758,25.346L49.729,11z\"\r\n                      />\r\n                      <path\r\n                        d=\"M21.289,34.242c-2.554,3.881-7.582,5.87-12.389,4.116C4.671,36.815,2,32.611,2,28.109L2,27h12v0h11l0-4.134\r\n\tc0-6.505-4.818-12.2-11.295-12.809C6.273,9.358,0,15.21,0,22.5l0,5.573c0,5.371,3.215,10.364,8.269,12.183\r\n\tc6.603,2.376,13.548-1.17,15.896-7.256c0,0,0,0,0,0h-0.638C22.616,33,21.789,33.481,21.289,34.242z M2,22.5C2,16.71,6.71,12,12.5,12\r\n\tS23,16.71,23,22.5V25H2V22.5z\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                  Express.js\r\n                </dt>\r\n                <dd className=\"mt-2 text-base leading-7 text-gray-600\">\r\n                  <p>Web Application Server를 구축한 경험이 있습니다.</p>\r\n                  <p>\r\n                    Sequelize와 MySQL을 사용하여 CRUD 및 API 설계 경험이\r\n                    있습니다.\r\n                  </p>\r\n                  <p>TypeScript로 개발 환경 구축 및 개발한 경험이 있습니다.</p>\r\n                </dd>\r\n              </div>\r\n              <div className=\"relative pl-16\">\r\n                <dt className=\"text-base font-semibold leading-7 text-gray-900\">\r\n                  <div className=\"absolute -left-8 -top-5 flex h-20 w-20 items-center justify-center rounded-lg \">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      viewBox=\"0 0 48 48\"\r\n                      width=\"96px\"\r\n                      height=\"96px\"\r\n                    >\r\n                      <path\r\n                        fill=\"#E65100\"\r\n                        d=\"M41,5H7l3,34l14,4l14-4L41,5L41,5z\"\r\n                      />\r\n                      <polygon\r\n                        fill=\"#FF6D00\"\r\n                        points=\"24,8 24,39.9 35.2,36.7 37.7,8 \"\r\n                      />\r\n                      <path\r\n                        fill=\"#FFFFFF\"\r\n                        d=\"M24,25v-4h8.6l-0.7,11.5L24,35.1v-4.2l4.1-1.4l0.3-4.5H24z M32.9,17l0.3-4H24v4H32.9z\"\r\n                      />\r\n                      <path\r\n                        fill=\"#EEEEEE\"\r\n                        d=\"M24,30.9v4.2l-7.9-2.6L15.7,27h4l0.2,2.5L24,30.9z M19.1,17H24v-4h-9.1l0.7,12H24v-4h-4.6L19.1,17z\"\r\n                      />\r\n                    </svg>\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      viewBox=\"0 0 48 48\"\r\n                      width=\"96px\"\r\n                      height=\"96px\"\r\n                    >\r\n                      <path\r\n                        fill=\"#0277BD\"\r\n                        d=\"M41,5H7l3,34l14,4l14-4L41,5L41,5z\"\r\n                      />\r\n                      <polygon\r\n                        fill=\"#039BE5\"\r\n                        points=\"24,8 24,39.9 35.2,36.7 37.7,8 \"\r\n                      />\r\n                      <polygon\r\n                        fill=\"#FFFFFF\"\r\n                        points=\"33.1,13 24,13 24,17 28.9,17 28.6,21 24,21 24,25 28.4,25 28.1,29.5 24,30.9 24,35.1 31.9,32.5 32.6,21 32.6,21 \"\r\n                      />\r\n                      <path\r\n                        fill=\"#EEEEEE\"\r\n                        d=\"M24,13v4h-8.9l-0.3-4H24z M19.4,21l0.2,4H24v-4H19.4z M19.8,27h-4l0.3,5.5l7.9,2.6v-4.2l-4.1-1.4L19.8,27z\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                  HTML5 / CSS3\r\n                </dt>\r\n                <dd className=\"mt-2 text-base leading-7 text-gray-600\">\r\n                  <p>웹 표준을 지키기 위해 노력합니다.</p>\r\n                  <p>반응형 웹을 만들 수 있습니다.</p>\r\n                  <p>BEM 방법론을 적용할 수 있습니다.</p>\r\n                  <p>Tailwind css 라이브러리 사용 경험이 있습니다.</p>\r\n                </dd>\r\n              </div>\r\n              <div className=\"relative pl-16\">\r\n                <dt className=\"text-base font-semibold leading-7 text-gray-900\">\r\n                  <div className=\"absolute left-0 top-0 flex h-10 w-10 items-center justify-center rounded-lg\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      viewBox=\"0 0 48 48\"\r\n                      width=\"96px\"\r\n                      height=\"96px\"\r\n                    >\r\n                      <path\r\n                        fill=\"#F4511E\"\r\n                        d=\"M42.2,22.1L25.9,5.8C25.4,5.3,24.7,5,24,5c0,0,0,0,0,0c-0.7,0-1.4,0.3-1.9,0.8l-3.5,3.5l4.1,4.1c0.4-0.2,0.8-0.3,1.3-0.3c1.7,0,3,1.3,3,3c0,0.5-0.1,0.9-0.3,1.3l4,4c0.4-0.2,0.8-0.3,1.3-0.3c1.7,0,3,1.3,3,3s-1.3,3-3,3c-1.7,0-3-1.3-3-3c0-0.5,0.1-0.9,0.3-1.3l-4-4c-0.1,0-0.2,0.1-0.3,0.1v10.4c1.2,0.4,2,1.5,2,2.8c0,1.7-1.3,3-3,3s-3-1.3-3-3c0-1.3,0.8-2.4,2-2.8V18.8c-1.2-0.4-2-1.5-2-2.8c0-0.5,0.1-0.9,0.3-1.3l-4.1-4.1L5.8,22.1C5.3,22.6,5,23.3,5,24c0,0.7,0.3,1.4,0.8,1.9l16.3,16.3c0,0,0,0,0,0c0.5,0.5,1.2,0.8,1.9,0.8s1.4-0.3,1.9-0.8l16.3-16.3c0.5-0.5,0.8-1.2,0.8-1.9C43,23.3,42.7,22.6,42.2,22.1z\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                  Git\r\n                </dt>\r\n                <dd className=\"mt-2 text-base leading-7 text-gray-600\">\r\n                  <p>기본적인 Git 명렁어를 사용할 수 있습니다.</p>\r\n                  <p>Git-flow 전략을 사용한 경험이 있습니다.</p>\r\n                  <p>Git Convention을 지키려고 노력합니다.</p>\r\n                </dd>\r\n              </div>\r\n            </dl>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tech;\r\n","import * as React from \"react\";\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\n\r\nconst Project1 = () => {\r\n  return (\r\n    <div className=\"relative\">\r\n      <div className=\" before:bg-gradient-to-tr from-[#8A52A3] to-[#972B44] py-20 sm:py-44 before:content-[''] before:opacity-70 before:absolute before:top-0 before:left-0 before:right-0 before:bottom-0 before:-z-10\">\r\n        <div className=\"mx-auto max-w-7xl \">\r\n          <div className=\"mx-auto max-w-2xl lg:text-center\">\r\n            <p className=\" text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl\">\r\n              Movify\r\n              <span>\r\n                <a\r\n                  href=\"https://github.com/taemin-jang/Movie_Vue\"\r\n                  target=\"blank\"\r\n                >\r\n                  <StaticImage\r\n                    src=\"../../images/GitHub-Mark.png\"\r\n                    width={40}\r\n                    height={40}\r\n                    className=\"rounded-3xl ml-3 mt-1\"\r\n                  />\r\n                </a>\r\n                <a\r\n                  href=\"https://superb-entremet-0f24f9.netlify.app/\"\r\n                  target=\"blank\"\r\n                  className=\"ml-3 p-2 text-xl font-semibold bg-black rounded-xl text-white\"\r\n                >\r\n                  Demo\r\n                </a>\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div className=\"max-w-full mt-10 -mb-10 flex justify-evenly boder-solid border-white border-4 rounded-3xl\">\r\n            <StaticImage\r\n              src=\"../../images/projects/movify_태블릿_목업_투명.png\"\r\n              width={600}\r\n              height={600}\r\n              className=\"mx-auto drop-shadow-shadowRD\"\r\n            />\r\n            <div className=\"py-40 pr-4\">\r\n              <h4 className=\"text-base font-semibold leading-7 text-gray-900\">\r\n                JavaScript와 Vue.js 공부한 내용 복습 및 TMDB API를 활용하여 영화\r\n                소개 사이트 제작\r\n              </h4>\r\n              <h4 className=\"text-base font-semibold leading-7 mt-3 text-gray-900\">\r\n                2022.07 ~ 2022.08 (개인)\r\n              </h4>\r\n              <div className=\"mt-3\">\r\n                <span className=\"inline-flex mr-3 px-3 items-center rounded-md bg-badge-vue px-2 py-1 text-xs font-bold text-white ring-1 ring-inset ring-white/20\">\r\n                  Vue\r\n                </span>\r\n                <span className=\"inline-flex mr-3 px-3 items-center rounded-md bg-badge-js px-2 py-1 text-xs font-bold text-black ring-1 ring-inset ring-white/20\">\r\n                  JavaScript\r\n                </span>\r\n                <span className=\"inline-flex mr-3 px-3 items-center rounded-md bg-badge-html px-2 py-1 text-xs font-bold text-white ring-1 ring-inset ring-white/20\">\r\n                  HTML\r\n                </span>\r\n                <span className=\"inline-flex mr-3 px-3 items-center rounded-md bg-badge-css px-2 py-1 text-xs font-bold text-white ring-1 ring-inset ring-white/20\">\r\n                  CSS\r\n                </span>\r\n              </div>\r\n              <div className=\"text-base leading-8 text-gray-900 mt-3\">\r\n                <p>- TMDB API를 활용한 영화 사이트 개발.</p>\r\n                <p>- RAF(RequestAnimationFrame)를 이용하여 카운트 기능 구현.</p>\r\n                <p>- TMDB API를 활용해 검색 기능 구현.</p>\r\n                <p>- Axios를 사용하여 HTTP 통신.</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project1;\r\n","import * as React from \"react\";\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\nconst Project2 = () => {\r\n  return (\r\n    <div className=\"relative\">\r\n      <div className=\" before:bg-primary-project2 py-24 sm:py-40 before:content-['']  before:absolute before:top-0 before:left-0 before:right-0 before:bottom-0 before:-z-10\">\r\n        <div className=\"mx-auto max-w-7xl\">\r\n          <div className=\"mx-auto max-w-2xl lg:text-center\">\r\n            <p className=\"mt-2 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl\">\r\n              4this HomePage\r\n              <a\r\n                href=\"https://github.com/taemin-jang/4thIS_Page_FE\"\r\n                target=\"blank\"\r\n              >\r\n                <StaticImage\r\n                  src=\"../../images/GitHub-Mark.png\"\r\n                  width={40}\r\n                  height={40}\r\n                  className=\"rounded-3xl ml-3 mt-1\"\r\n                />\r\n              </a>\r\n              <a\r\n                href=\"http://fourthis.cafe24.com/\"\r\n                target=\"blank\"\r\n                className=\"ml-3 p-2 text-xl font-semibold bg-black rounded-xl text-white\"\r\n              >\r\n                Demo\r\n              </a>\r\n            </p>\r\n          </div>\r\n          <div className=\"max-w-full mt-10 -mb-10 flex justify-evenly boder-solid border-white border-4 rounded-3xl\">\r\n            <StaticImage\r\n              src=\"../../images/projects/4thIS_태블릿_목업_투명.png\"\r\n              width={600}\r\n              height={600}\r\n              className=\"-ml-20 mr-10 drop-shadow-shadowRD\"\r\n            />\r\n            <div className=\"py-40 w-1/2\">\r\n              <h4 className=\"text-base font-semibold leading-7 text-gray-900\">\r\n                동아리 홍보 및 프론트엔드 역량 강화 목적으로 프로젝트 진행\r\n              </h4>\r\n              <h4 className=\"text-base font-semibold leading-7 mt-3 text-gray-900\">\r\n                2022.09 ~ 2022.10 (팀)\r\n              </h4>\r\n              <h4 className=\"text-base font-semibold leading-7 mt-3 text-gray-900\">\r\n                팀장, FE 40% 기여\r\n              </h4>\r\n              <div className=\"mt-3\">\r\n                <span className=\"inline-flex mr-3 px-3 items-center rounded-md bg-badge-js px-2 py-1 text-xs font-bold text-black ring-1 ring-inset ring-white/20\">\r\n                  JavaScript\r\n                </span>\r\n                <span className=\"inline-flex mr-3 px-3 items-center rounded-md bg-badge-html px-2 py-1 text-xs font-bold text-white ring-1 ring-inset ring-white/20\">\r\n                  HTML\r\n                </span>\r\n                <span className=\"inline-flex mr-3 px-3 items-center rounded-md bg-badge-css px-2 py-1 text-xs font-bold text-white ring-1 ring-inset ring-white/20\">\r\n                  CSS\r\n                </span>\r\n                <span className=\"inline-flex mr-3 px-3 items-center rounded-md bg-badge-git px-2 py-1 text-xs font-bold text-white ring-1 ring-inset ring-white/20\">\r\n                  Git\r\n                </span>\r\n              </div>\r\n              <ul className=\"text-base leading-8 text-gray-900 mt-3\">\r\n                <li>- 스케쥴 및 팀원 관리, 메인 페이지, 모바일 반응형 제작</li>\r\n                <li>\r\n                  - Vanila JavaScript 사용하여 슬라이드, 카운트 다운, 마우스\r\n                  포인터 구현\r\n                </li>\r\n                <li>\r\n                  - 협업 능력을 기르기 위해 git 컨벤션, CSS BEM 방식을 주도하여\r\n                  진행\r\n                </li>\r\n                <li>\r\n                  - 2021년에 비해 동아리 지원율 <strong>2배</strong> 증가\r\n                </li>\r\n                <li>- cafe24로 배포</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project2;\r\n","import * as React from \"react\";\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\n\r\nconst Project1 = () => {\r\n  return (\r\n    <div className=\"relative\">\r\n      <div className=\" before:bg-primary-project3 py-24 sm:py-40 before:content-[''] before:opacity-70 before:absolute before:top-0 before:left-0 before:right-0 before:bottom-0 before:-z-10\">\r\n        <div className=\"mx-auto max-w-7xl \">\r\n          <div className=\"mx-auto max-w-2xl lg:text-center\">\r\n            <p className=\"mt-2 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl\">\r\n              Interview System\r\n              <a\r\n                href=\"https://github.com/taemin-jang/interview-system\"\r\n                target=\"blank\"\r\n              >\r\n                <StaticImage\r\n                  src=\"../../images/GitHub-Mark.png\"\r\n                  width={40}\r\n                  height={40}\r\n                  className=\"rounded-3xl ml-3 mt-1\"\r\n                />\r\n              </a>\r\n            </p>\r\n          </div>\r\n          <div className=\"relative max-w-full mt-10 -mb-10 flex justify-evenly boder-solid border-white border-4 rounded-3xl\">\r\n            <div className=\"group\">\r\n              <StaticImage\r\n                src=\"../../images/projects/interviewsystem_태블릿_목업_투명.png\"\r\n                width={600}\r\n                height={600}\r\n                className=\"transition duration-700 ease-in-out -ml-20 mr-10 drop-shadow-shadowRD group-hover:-translate-x-10 group-hover:-translate-y-10\"\r\n              />\r\n              <StaticImage\r\n                src=\"../../images/projects/interviewsystem_태블릿_목업2.png\"\r\n                width={600}\r\n                height={600}\r\n                className=\"!absolute transition duration-700 ease-in-out drop-shadow-shadowRD group-hover:-z-10 group-hover:translate-x-10 group-hover:translate-y-10 -left-8 bottom-8\"\r\n              />\r\n            </div>\r\n            <div className=\"pt-20 w-1/2\">\r\n              <h4 className=\"text-base font-semibold leading-7 text-gray-900\">\r\n                이력서 작성, 지원, 면접을 한 곳에서 관리\r\n              </h4>\r\n              <h4 className=\"text-base font-semibold leading-7 mt-3 text-gray-900\">\r\n                2022.10 ~ 2022.12 (팀)\r\n              </h4>\r\n              <h4 className=\"text-base font-semibold leading-7 mt-3 text-gray-900\">\r\n                팀장, FE 60% BE 40% 기여\r\n              </h4>\r\n              <div className=\"mt-3\">\r\n                <span className=\"inline-flex mr-3 px-3 items-center rounded-md bg-badge-vue px-2 py-1 text-xs font-bold text-white ring-1 ring-inset ring-white/20\">\r\n                  Vue\r\n                </span>\r\n                <span className=\"inline-flex mr-3 px-3 items-center rounded-md bg-badge-js px-2 py-1 text-xs font-bold text-black ring-1 ring-inset ring-white/20\">\r\n                  JavaScript\r\n                </span>\r\n                <span className=\"inline-flex mr-3 px-3 items-center rounded-md bg-badge-express px-2 py-1 text-xs font-bold text-white ring-1 ring-inset ring-white/20\">\r\n                  Express\r\n                </span>\r\n                <span className=\"inline-flex mr-3 px-3 items-center rounded-md bg-badge-ts px-2 py-1 text-xs font-bold text-white ring-1 ring-inset ring-white/20\">\r\n                  TypeScript\r\n                </span>\r\n                <span className=\"inline-flex mr-3 px-3 items-center rounded-md bg-badge-webrtc px-2 py-1 text-xs font-bold text-white ring-1 ring-inset ring-white/20\">\r\n                  WebRTC\r\n                </span>\r\n                <span className=\"inline-flex mr-3 px-3 items-center rounded-md bg-badge-socket px-2 py-1 text-xs font-bold text-white ring-1 ring-inset ring-white/20\">\r\n                  Socket.io\r\n                </span>\r\n                <span className=\"inline-flex mr-3 px-3 items-center rounded-md bg-badge-git px-2 py-1 text-xs font-bold text-white ring-1 ring-inset ring-white/20\">\r\n                  Git\r\n                </span>\r\n              </div>\r\n              <div className=\"text-base leading-7 text-gray-900 mt-3\">\r\n                <p>\r\n                  - 교내 추천 채용 게시판이 잘 활용되지 않아 개선하기 위해\r\n                  프로젝트를 진행.\r\n                </p>\r\n                <p>\r\n                  - 협업 능력을 기르기 위해 git 컨벤션, git flow 전략, css BEM\r\n                  방식, 코드 리뷰를 주도하여 진행.\r\n                </p>\r\n                <p>\r\n                  - Vue-router의 네비게이션 가드를 통해 면접자와 면접관을\r\n                  분리하여 직접 접근 제어.\r\n                </p>\r\n                <p>- Vuex 상태관리 라이브러리를 도입해 props 복잡도 개선.</p>\r\n                <p>\r\n                  - FE 개발 중 BE 데이터가 필요할 경우 Postman dummy API를\r\n                  만들어 개발 속도를 향상.\r\n                </p>\r\n                <p>\r\n                  - dummy API인 Resume, Apply, Score API를 Express, Sequelize\r\n                  공식 문서를 통해 직접 개발하여 BE 개발 기한을 맞출 수 있도록\r\n                  기여.\r\n                </p>\r\n                <p>\r\n                  - AWS EC2로 배포했으며 WebRTC를 이용한 화상 면접 기능을 다른\r\n                  NAT 상에서도 동작시키기 위해 HTTPS 연동 및 로드밸런서 설정,\r\n                  coturn을 이용해 TURN 서버 구축.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project1;\r\n","import * as React from \"react\";\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\nconst Project1 = () => {\r\n  return (\r\n    <div id=\"project\" className=\"relative\">\r\n      <div className=\" before:bg-white py-24 sm:py-40 before:content-[''] before:opacity-70 before:absolute before:top-0 before:left-0 before:right-0 before:bottom-0 before:-z-10\">\r\n        <div className=\"mx-auto max-w-7xl \">\r\n          <div className=\"mx-auto max-w-2xl lg:text-center\">\r\n            <h2 className=\"text-base font-semibold leading-7 text-indigo-600\">\r\n              Project\r\n            </h2>\r\n            <p className=\"mt-2 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl\">\r\n              News Summary\r\n              <a\r\n                href=\"https://github.com/taemin-jang/news_summary_frontend\"\r\n                target=\"blank\"\r\n              >\r\n                <StaticImage\r\n                  src=\"../../images/GitHub-Mark.png\"\r\n                  width={40}\r\n                  height={40}\r\n                  className=\"rounded-3xl ml-3 mt-1\"\r\n                />\r\n              </a>\r\n            </p>\r\n          </div>\r\n          <div className=\"relative max-w-full mt-10 -mb-10 flex justify-evenly boder-solid border-black border-4 rounded-3xl\">\r\n            <div className=\"group\">\r\n              <StaticImage\r\n                src=\"../../images/projects/NewsSummary_태블릿_목업.png\"\r\n                width={600}\r\n                height={600}\r\n                className=\"transition duration-700 ease-in-out -ml-20 mr-10 drop-shadow-shadowRD group-hover:-translate-x-10 group-hover:-translate-y-10\"\r\n              />\r\n              <StaticImage\r\n                src=\"../../images/projects/NewsSummary_태블릿_목업2.png\"\r\n                width={600}\r\n                height={600}\r\n                className=\"!absolute transition duration-700 ease-in-out drop-shadow-shadowRD group-hover:-z-10 group-hover:translate-x-10 group-hover:translate-y-10 -left-8 bottom-8\"\r\n              />\r\n            </div>\r\n            <div className=\"pt-20 w-1/2\">\r\n              <h4 className=\"text-base font-semibold leading-7 text-gray-900\">\r\n                주식 포트폴리오에 등록된 관련 뉴스만 제공해주는 플랫폼\r\n              </h4>\r\n              <h4 className=\"text-base font-semibold leading-7 mt-3 text-gray-900\">\r\n                2023.04 ~ 2023.06 (개인)\r\n              </h4>\r\n              <div className=\"mt-3\">\r\n                <span className=\"inline-flex mr-3 px-3 items-center rounded-md bg-badge-vue px-2 py-1 text-xs font-bold text-white ring-1 ring-inset ring-white/20\">\r\n                  Vue\r\n                </span>\r\n                <span className=\"inline-flex mr-3 px-3 items-center rounded-md bg-badge-vuetify px-2 py-1 text-xs font-bold text-white ring-1 ring-inset ring-white/20\">\r\n                  Vuetify\r\n                </span>\r\n                <span className=\"inline-flex mr-3 px-3 items-center rounded-md bg-badge-js px-2 py-1 text-xs font-bold text-black ring-1 ring-inset ring-white/20\">\r\n                  JavaScript\r\n                </span>\r\n                <span className=\"inline-flex mr-3 px-3 items-center rounded-md bg-badge-ts px-2 py-1 text-xs font-bold text-white ring-1 ring-inset ring-white/20\">\r\n                  TypeScript\r\n                </span>\r\n                <span className=\"inline-flex mr-3 px-3 items-center rounded-md bg-badge-express px-2 py-1 text-xs font-bold text-white ring-1 ring-inset ring-white/20\">\r\n                  Express\r\n                </span>\r\n                <span className=\"inline-flex mr-3 px-3 items-center rounded-md bg-badge-html px-2 py-1 text-xs font-bold text-white ring-1 ring-inset ring-white/20\">\r\n                  HTML\r\n                </span>\r\n                <span className=\"inline-flex mr-3 px-3 items-center rounded-md bg-badge-css px-2 py-1 text-xs font-bold text-white ring-1 ring-inset ring-white/20\">\r\n                  CSS\r\n                </span>\r\n                <span className=\"inline-flex mr-3 px-3 items-center rounded-md bg-badge-git px-2 py-1 text-xs font-bold text-white ring-1 ring-inset ring-white/20\">\r\n                  Git\r\n                </span>\r\n              </div>\r\n              <div className=\"text-base leading-7 text-gray-900 mt-3\">\r\n                <p>- 카카오 OAuth 기능으로 간편하게 로그인 가능.</p>\r\n                <p>- Pinia 상태관리 라이브러리를 도입해 props 복잡도 개선.</p>\r\n                <p>- Vuetify의 theme을 활용하여 다크모드 구현.</p>\r\n                <p>- 사용자 편의를 위해 무한 스크롤 구현.</p>\r\n                <p>\r\n                  - 포트폴리오에 등록된 주식마다 금융위원회 API로 최근 5일간의\r\n                  종가를 시각적으로 표현하기 위해 차트로 구현.\r\n                </p>\r\n                <p>\r\n                  - 금융위원회 주식시세정보 Open API를 사용하여 주식\r\n                  포트폴리오에 주식 등록 및 삭제 가능.\r\n                </p>\r\n                <p>\r\n                  - 등록된 포트폴리오를 기반으로 Naver Search API를 사용하여\r\n                  뉴스 기사 제공.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project1;\r\n","import * as React from \"react\";\r\nimport Header from \"./header\";\r\nimport Hero from \"./hero\";\r\nimport Tech from \"./tech\";\r\nimport Project1 from \"./projects/project1\";\r\nimport Project2 from \"./projects/project2\";\r\nimport Project3 from \"./projects/project3\";\r\nimport Project4 from \"./projects/project4\";\r\nconst Layout = () => {\r\n  return (\r\n    <div className=\"layout\">\r\n      <Header />\r\n      <Hero></Hero>\r\n      <Tech></Tech>\r\n      <Project4></Project4>\r\n      <Project3></Project3>\r\n      <Project2></Project2>\r\n      <Project1></Project1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","hasNativeLazyLoadSupport","HTMLImageElement","prototype","srcSet","width","height","layout","wrapperStyle","className","style","getMainProps","isLoading","isLoaded","images","loading","shouldLoad","_extends","opacity","getPlaceholderProps","placeholder","backgroundColor","objectFit","objectPosition","position","top","left","bottom","right","result","transition","Sizer","React","createElement","paddingTop","maxWidth","display","alt","role","src","LayoutWrapper","_ref","children","props","_objectWithoutPropertiesLoose","Fragment","Image","decoding","Picture","_ref2","fallback","sources","sizes","media","type","key","fallbackImage","propTypes","PropTypes","isRequired","displayName","Placeholder","_Picture$propTypes","propName","componentName","Error","MainImage","removeNewLines","str","altValidator","rest","image","_excluded","Set","renderImageToStringPromise","renderImage","GatsbyImageHydrator","as","class","preactClass","onStartLoad","onLoad","onError","getWrapperProps","wStyle","wClass","wrapperProps","root","useRef","useMemo","JSON","stringify","sizer","useEffect","import","then","renderImageToString","swapPlaceholderImage","ssrImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","animationFrame","cleanupCallback","innerHTML","requestAnimationFrame","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","GatsbyImage","memo","_getStaticImage","StaticImage","__imageData","imageData","__error","console","warn","imgClassName","imgStyle","placeholderBackgroundColor","cleanedImages","checkDimensionProps","number","validLayouts","GatsbyImageBrowser","data","useStaticQuery","to","site","siteMetadata","title","id","href","fill","viewBox","xmlns","d","S","points","baseProfile","version","y","target"],"sourceRoot":""}